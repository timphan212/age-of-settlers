/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my.ageofsettlers;

/**
 *
 * @author SailendraBharadwaj
 */
public class TahTradeCardForEgyptGUI extends javax.swing.JFrame {

    /**
     * Creates new form TahTradeCardForEgyptGUI
     */
    public TahTradeCardForEgyptGUI() {
        this.board = BoardController.getInstance();
        this.egyptPlayer = Egyptian.getInstance();
        this.greekPlayer = Greek.getInstance();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        food = new javax.swing.JRadioButton();
        wood = new javax.swing.JRadioButton();
        gold = new javax.swing.JRadioButton();
        favor = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        food.setText("Food");

        wood.setText("Wood");

        gold.setText("Gold");

        favor.setText("Favor");

        jButton1.setText("Proceed");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(favor)
                            .addComponent(gold)
                            .addComponent(wood)
                            .addComponent(food)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jButton1)
                        .addGap(67, 67, 67)
                        .addComponent(jButton2)))
                .addContainerGap(119, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(food)
                .addGap(18, 18, 18)
                .addComponent(wood)
                .addGap(18, 18, 18)
                .addComponent(gold)
                .addGap(18, 18, 18)
                .addComponent(favor)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(food.isSelected() == true) {
           if(greekPlayer.getFood() >=2) {
               int greekFood = greekPlayer.getFood() - 2;
               greekPlayer.setFood(greekFood);
               int egyptFood = egyptPlayer.getFood() + 2;
               egyptPlayer.setFood(egyptFood);
               board.updateResources("Greek");
               board.updateResources("Egyptian");
               this.setVisible(false);
           }
           else {
            buildingErrorGUI beGUI = new buildingErrorGUI();
            beGUI.setVisible(true);
           } 
        }
        else if(wood.isSelected() == true) {
             if(greekPlayer.getWood()>=2) {
               int greekWood = greekPlayer.getWood() - 2;
               greekPlayer.setWood(greekWood);
               int egyptWood = egyptPlayer.getWood() + 2;
               egyptPlayer.setWood(egyptWood);
               board.updateResources("Greek");
               board.updateResources("Egyptian");
               this.setVisible(false);
           }
           else {
            buildingErrorGUI beGUI = new buildingErrorGUI();
            beGUI.setVisible(true);
           }  
        }
        else if(gold.isSelected() == true) {
            if(greekPlayer.getGold()>=2) {
               int greekGold = greekPlayer.getGold() - 2;
               greekPlayer.setGold(greekGold);
               int egyptGold = egyptPlayer.getGold() + 2;
               egyptPlayer.setGold(egyptGold);
               board.updateResources("Greek");
               board.updateResources("Egyptian");
               this.setVisible(false);
           }
           else {
            buildingErrorGUI beGUI = new buildingErrorGUI();
            beGUI.setVisible(true);
           }  
            
        }
        else if(favor.isSelected() == true) {
            if(greekPlayer.getFavor()>=2) {
               int greekFavor = greekPlayer.getFavor() - 2;
               greekPlayer.setFavor(greekFavor);
               int egyptFavor = egyptPlayer.getFavor() + 2;
               egyptPlayer.setFavor(egyptFavor);
               board.updateResources("Greek");
               board.updateResources("Egyptian");
               this.setVisible(false);
           }
           else {
            buildingErrorGUI beGUI = new buildingErrorGUI();
            beGUI.setVisible(true);
           }  
        }
                  //board.initPlayPermCards();
        board.configureTurnFormation(board.getCurrentPlayerTurn()+1);

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.setVisible(false);
        //board.initPlayPermCards();
        board.configureTurnFormation(board.getCurrentPlayerTurn()+1);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TahTradeCardForEgyptGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TahTradeCardForEgyptGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TahTradeCardForEgyptGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TahTradeCardForEgyptGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TahTradeCardForEgyptGUI().setVisible(true);
            }
        });
    }
    private BoardController board;
    Egyptian egyptPlayer;
    Greek greekPlayer;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton favor;
    private javax.swing.JRadioButton food;
    private javax.swing.JRadioButton gold;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JRadioButton wood;
    // End of variables declaration//GEN-END:variables
}
